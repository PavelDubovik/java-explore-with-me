{
	"info": {
		"_postman_id": "eeeb2de5-b91b-49ec-8bec-0c7fd15abe79",
		"name": "Comments",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23144431"
	},
	"item": [
		{
			"name": "Private",
			"item": [
				{
					"name": "Create Comment Fail Text",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"event\": \"1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/1/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"1",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Comment Fail Event Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"You are never too old to set another goal or dream a new dream.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/1/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"1",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);",
									"});",
									"pm.test(\"Test create comment\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id, '\"id\" field').to.eql(1);",
									"    pm.expect(jsonData.text, '\"text\" field').to.eql('You are never too old to set another goal or dream a new dream.');",
									"    pm.expect(jsonData.event, '\"event\" field').to.eql(1);",
									"    pm.expect(jsonData.author, '\"author\" field').to.eql(1);",
									"    pm.expect(jsonData.status, '\"name\" field').to.eql('WAITING');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"You are never too old to set another goal or dream a new dream.\",\n    \"event\": \"1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/1/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"1",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Comment 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);",
									"});",
									"pm.test(\"Test create comment\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id, '\"id\" field').to.eql(2);",
									"    pm.expect(jsonData.text, '\"text\" field').to.eql('You always pass failure on the way to success.');",
									"    pm.expect(jsonData.event, '\"event\" field').to.eql(1);",
									"    pm.expect(jsonData.author, '\"author\" field').to.eql(1);",
									"    pm.expect(jsonData.status, '\"name\" field').to.eql('WAITING');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"You always pass failure on the way to success.\",\n    \"event\": \"1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/1/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"1",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Comment 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);",
									"});",
									"pm.test(\"Test create comment\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id, '\"id\" field').to.eql(3);",
									"    pm.expect(jsonData.text, '\"text\" field').to.eql('It always seems impossible until it is done.');",
									"    pm.expect(jsonData.event, '\"event\" field').to.eql(1);",
									"    pm.expect(jsonData.author, '\"author\" field').to.eql(1);",
									"    pm.expect(jsonData.status, '\"name\" field').to.eql('WAITING');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"It always seems impossible until it is done.\",\n    \"event\": \"1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/1/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"1",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Test create comment\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id, '\"id\" field').to.eql(3);",
									"    pm.expect(jsonData.text, '\"text\" field').to.eql('The happiness of your life depends upon the quality of your thoughts.');",
									"    pm.expect(jsonData.event, '\"event\" field').to.eql(1);",
									"    pm.expect(jsonData.author, '\"author\" field').to.eql(1);",
									"    pm.expect(jsonData.status, '\"name\" field').to.eql('WAITING');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"The happiness of your life depends upon the quality of your thoughts.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/1/comments/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"1",
								"comments",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Comments By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Test get comment by id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id, '\"id\" field').to.eql(1);",
									"    pm.expect(jsonData.text, '\"text\" field').to.eql('You are never too old to set another goal or dream a new dream.');",
									"    pm.expect(jsonData.event, '\"event\" field').to.eql(1);",
									"    pm.expect(jsonData.author, '\"author\" field').to.eql(1);",
									"    pm.expect(jsonData.status, '\"name\" field').to.eql('WAITING');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/users/1/comments/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"1",
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get unknown Comments By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/users/1/comments/100",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"1",
								"comments",
								"100"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Test create comment\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).is.an('array').length(3);",
									"    pm.expect(jsonData[0].id, 'result[0]: \"id\" field').to.eql(3);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/users/1/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"1",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete unknown Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/users/2/comments/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"2",
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/users/1/comments/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"1",
								"comments",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Comments Pageable",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Test create comment\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).is.an('array').length(2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/users/1/comments?from=0&size=6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"1",
								"comments"
							],
							"query": [
								{
									"key": "from",
									"value": "0"
								},
								{
									"key": "size",
									"value": "6"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Events Comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Test create comment\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).is.an('array').length(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/events/1/comments?from=0&size=6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"events",
								"1",
								"comments"
							],
							"query": [
								{
									"key": "from",
									"value": "0"
								},
								{
									"key": "size",
									"value": "6"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Get Comments Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Test create comment\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).is.an('array').length(2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update by Admin APPROVED",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Test create comment\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id, '\"id\" field').to.eql(1);",
									"    pm.expect(jsonData.text, '\"text\" field').to.eql('You are never too old to set another goal or dream a new dream.');",
									"    pm.expect(jsonData.event, '\"event\" field').to.eql(1);",
									"    pm.expect(jsonData.author, '\"author\" field').to.eql(1);",
									"    pm.expect(jsonData.status, '\"name\" field').to.eql('APPROVED');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"APPROVED\",\n    \"id\": \"1\",\n    \"author\": \"1\",\n    \"event\": \"1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Comments Admin APPROVED",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Test create comment\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).is.an('array').length(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/comments?statuses=APPROVED",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"comments"
							],
							"query": [
								{
									"key": "statuses",
									"value": "APPROVED"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Events Comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Test create comment\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).is.an('array').length(1);",
									"    pm.expect(jsonData[0].id, 'result[0]: \"id\" field').to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/events/1/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"events",
								"1",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Events Comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Test create comment\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).is.an('array').length(2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/users/1/comments?from=0&size=6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"1",
								"comments"
							],
							"query": [
								{
									"key": "from",
									"value": "0"
								},
								{
									"key": "size",
									"value": "6"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update by Admin REJECTED",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Test create comment\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id, '\"id\" field').to.eql(3);",
									"    pm.expect(jsonData.text, '\"text\" field').to.eql('The happiness of your life depends upon the quality of your thoughts.');",
									"    pm.expect(jsonData.event, '\"event\" field').to.eql(1);",
									"    pm.expect(jsonData.author, '\"author\" field').to.eql(1);",
									"    pm.expect(jsonData.status, '\"name\" field').to.eql('REJECTED');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"REJECTED\",\n    \"id\": \"3\",\n    \"author\": \"1\",\n    \"event\": \"1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Comments Admin REJECTED",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Test create comment\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).is.an('array').length(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/comments?statuses=REJECTED",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"comments"
							],
							"query": [
								{
									"key": "statuses",
									"value": "REJECTED"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}